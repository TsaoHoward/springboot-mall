<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.springbootmybatis.mapper.ProductMapper">
  <resultMap id="BaseResultMap" type="com.example.springbootmybatis.po.Product">
    <id column="product_id" jdbcType="INTEGER" property="productId" />
    <result column="product_name" jdbcType="VARCHAR" property="productName" />
    <result column="category" jdbcType="VARCHAR" property="category" />
    <result column="image_url" jdbcType="VARCHAR" property="imageUrl" />
    <result column="price" jdbcType="INTEGER" property="price" />
    <result column="stock" jdbcType="INTEGER" property="stock" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="created_date" jdbcType="TIMESTAMP" property="createdDate" />
    <result column="last_modified_date" jdbcType="TIMESTAMP" property="lastModifiedDate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    product_id, product_name, category, image_url, price, stock, description, created_date, 
    last_modified_date
  </sql>
  <select id="selectByExample" parameterType="com.example.springbootmybatis.po.ProductExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from product
    where product_id = #{productId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from product
    where product_id = #{productId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.springbootmybatis.po.ProductExample">
    delete from product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="product_id" keyProperty="productId" parameterType="com.example.springbootmybatis.po.Product" useGeneratedKeys="true">
    insert into product (product_name, category, image_url,
      price, stock, description, 
      created_date, last_modified_date)
    values (#{productName,jdbcType=VARCHAR}, #{category,jdbcType=VARCHAR}, #{imageUrl,jdbcType=VARCHAR}, 
      #{price,jdbcType=INTEGER}, #{stock,jdbcType=INTEGER}, #{description,jdbcType=VARCHAR}, 
      #{createdDate,jdbcType=TIMESTAMP}, #{lastModifiedDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyColumn="product_id" keyProperty="productId" parameterType="com.example.springbootmybatis.po.Product" useGeneratedKeys="true">
    insert into product
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="productName != null">
        product_name,
      </if>
      <if test="category != null">
        category,
      </if>
      <if test="imageUrl != null">
        image_url,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="stock != null">
        stock,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="createdDate != null">
        created_date,
      </if>
      <if test="lastModifiedDate != null">
        last_modified_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="productName != null">
        #{productName,jdbcType=VARCHAR},
      </if>
      <if test="category != null">
        #{category,jdbcType=VARCHAR},
      </if>
      <if test="imageUrl != null">
        #{imageUrl,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=INTEGER},
      </if>
      <if test="stock != null">
        #{stock,jdbcType=INTEGER},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="createdDate != null">
        #{createdDate,jdbcType=TIMESTAMP},
      </if>
      <if test="lastModifiedDate != null">
        #{lastModifiedDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.springbootmybatis.po.ProductExample" resultType="java.lang.Long">
    select count(*) from product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update product
    <set>
      <if test="row.productId != null">
        product_id = #{row.productId,jdbcType=INTEGER},
      </if>
      <if test="row.productName != null">
        product_name = #{row.productName,jdbcType=VARCHAR},
      </if>
      <if test="row.category != null">
        category = #{row.category,jdbcType=VARCHAR},
      </if>
      <if test="row.imageUrl != null">
        image_url = #{row.imageUrl,jdbcType=VARCHAR},
      </if>
      <if test="row.price != null">
        price = #{row.price,jdbcType=INTEGER},
      </if>
      <if test="row.stock != null">
        stock = #{row.stock,jdbcType=INTEGER},
      </if>
      <if test="row.description != null">
        description = #{row.description,jdbcType=VARCHAR},
      </if>
      <if test="row.createdDate != null">
        created_date = #{row.createdDate,jdbcType=TIMESTAMP},
      </if>
      <if test="row.lastModifiedDate != null">
        last_modified_date = #{row.lastModifiedDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update product
    set product_id = #{row.productId,jdbcType=INTEGER},
      product_name = #{row.productName,jdbcType=VARCHAR},
      category = #{row.category,jdbcType=VARCHAR},
      image_url = #{row.imageUrl,jdbcType=VARCHAR},
      price = #{row.price,jdbcType=INTEGER},
      stock = #{row.stock,jdbcType=INTEGER},
      description = #{row.description,jdbcType=VARCHAR},
      created_date = #{row.createdDate,jdbcType=TIMESTAMP},
      last_modified_date = #{row.lastModifiedDate,jdbcType=TIMESTAMP}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.springbootmybatis.po.Product">
    update product
    <set>
      <if test="productName != null">
        product_name = #{productName,jdbcType=VARCHAR},
      </if>
      <if test="category != null">
        category = #{category,jdbcType=VARCHAR},
      </if>
      <if test="imageUrl != null">
        image_url = #{imageUrl,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=INTEGER},
      </if>
      <if test="stock != null">
        stock = #{stock,jdbcType=INTEGER},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="createdDate != null">
        created_date = #{createdDate,jdbcType=TIMESTAMP},
      </if>
      <if test="lastModifiedDate != null">
        last_modified_date = #{lastModifiedDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where product_id = #{productId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.springbootmybatis.po.Product">
    update product
    set product_name = #{productName,jdbcType=VARCHAR},
      category = #{category,jdbcType=VARCHAR},
      image_url = #{imageUrl,jdbcType=VARCHAR},
      price = #{price,jdbcType=INTEGER},
      stock = #{stock,jdbcType=INTEGER},
      description = #{description,jdbcType=VARCHAR},
      created_date = #{createdDate,jdbcType=TIMESTAMP},
      last_modified_date = #{lastModifiedDate,jdbcType=TIMESTAMP}
    where product_id = #{productId,jdbcType=INTEGER}
  </update>
</mapper>